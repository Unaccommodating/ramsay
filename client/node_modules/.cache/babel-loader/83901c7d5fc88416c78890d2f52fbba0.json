{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nexport default class DishStore {\n  constructor() {\n    this._categories = [];\n    this._nationalities = [];\n    this._specialGroups = [];\n    this._selectedCategory = {};\n    this._selectedNationality = {};\n    this._selectedSpecialGroup = {};\n    this._ingridientSearch = '';\n    this._selectedIngridientSearch = '';\n    this._selectedSpecialGroup = {};\n    this._dishes = [];\n    this._measure_id = {};\n    this._ingridient = {};\n    this._selectedMeaSure = {};\n    this._selectedIngridient = {};\n    this._page = 1;\n    this._totalCount = 0;\n    this._limit = 3;\n    makeAutoObservable(this);\n  }\n\n  setCategories(categories) {\n    this._categories = categories;\n  }\n\n  setNationalities(nationalities) {\n    this._nationalities = nationalities;\n  }\n\n  setSpecialGroup(specialGroups) {\n    this._specialGroups = specialGroups;\n  }\n\n  setIngridientSearch(ingridientSearch) {\n    this._ingridientSearch = ingridientSearch;\n  }\n\n  setDish(dishes) {\n    this._dishes = dishes;\n  }\n\n  setMeaSure(measure_id) {\n    this._measure_id = measure_id;\n  }\n\n  setIngridient(ingridient) {\n    this._ingridient = ingridient;\n  }\n\n  setSelectedCategory(category) {\n    this.setPage(1);\n    this._selectedCategory = category;\n  }\n\n  setSelectedSpecialGroup(specialGroup) {\n    this.setPage(1);\n    this._selectedSpecialGroup = specialGroup;\n  }\n\n  setSelectedNationality(nationality) {\n    this.setPage(1);\n    this._selectedNationality = nationality;\n  }\n\n  setSelectedIngridientSearch(ingridientSearch) {\n    this.setPage(1);\n    this._selectedIngridientSearch = ingridientSearch;\n  }\n\n  setSelectedMeaSure(measure_id) {\n    this._selectedMeaSure = measure_id;\n  }\n\n  setSelectedIngridient(ingridient) {\n    this._selectedIngridient = ingridient;\n  }\n\n  setPage(page) {\n    this._page = page;\n  }\n\n  setTotalCount(count) {\n    this._totalCount = count;\n  }\n\n  get categories() {\n    return this._categories;\n  }\n\n  get nationalities() {\n    return this._nationalities;\n  }\n\n  get specialGroup() {\n    return this._specialGroups;\n  }\n\n  get dishes() {\n    return this._dishes;\n  }\n\n  get ingridientSearch() {\n    return this._ingridientSearch;\n  }\n\n  get measure_id() {\n    return this._measure_id;\n  }\n\n  get ingridients() {\n    return this._ingridient;\n  }\n\n  get selectedCategory() {\n    return this._selectedCategory;\n  }\n\n  get selectedNationality() {\n    return this._selectedNationality;\n  }\n\n  get selectedSpecialGroup() {\n    return this._selectedSpecialGroup;\n  }\n\n  get selectedIngridientSearch() {\n    return this._selectedIngridientSearch;\n  }\n\n  get selectedMeaSure() {\n    return this._selectedMeaSure;\n  }\n\n  get selectedIngridient() {\n    return this._selectedMeaSure;\n  }\n\n  get totalCount() {\n    return this._totalCount;\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  get limit() {\n    return this._limit;\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","DishStore","constructor","_categories","_nationalities","_specialGroups","_selectedCategory","_selectedNationality","_selectedSpecialGroup","_ingridientSearch","_selectedIngridientSearch","_dishes","_measure_id","_ingridient","_selectedMeaSure","_selectedIngridient","_page","_totalCount","_limit","setCategories","categories","setNationalities","nationalities","setSpecialGroup","specialGroups","setIngridientSearch","ingridientSearch","setDish","dishes","setMeaSure","measure_id","setIngridient","ingridient","setSelectedCategory","category","setPage","setSelectedSpecialGroup","specialGroup","setSelectedNationality","nationality","setSelectedIngridientSearch","setSelectedMeaSure","setSelectedIngridient","page","setTotalCount","count","ingridients","selectedCategory","selectedNationality","selectedSpecialGroup","selectedIngridientSearch","selectedMeaSure","selectedIngridient","totalCount","limit"],"sources":["D:/node-react/ramsay/client/src/store/DishStore.js"],"sourcesContent":["import {makeAutoObservable} from \"mobx\";\r\n\r\nexport default class DishStore{\r\n    constructor() {\r\n        this._categories = []\r\n        this._nationalities = []\r\n        this._specialGroups = []\r\n        this._selectedCategory = {}\r\n        this._selectedNationality = {}\r\n        this._selectedSpecialGroup = {}\r\n        this._ingridientSearch = ''\r\n        this._selectedIngridientSearch = ''\r\n        this._selectedSpecialGroup = {}\r\n        this._dishes = []\r\n        this._measure_id = {}\r\n        this._ingridient = {}\r\n        this._selectedMeaSure = {}\r\n        this._selectedIngridient = {}\r\n        this._page = 1\r\n        this._totalCount = 0\r\n        this._limit = 3\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setCategories(categories) {\r\n        this._categories = categories\r\n    }\r\n    setNationalities(nationalities) {\r\n        this._nationalities = nationalities\r\n    }\r\n    setSpecialGroup(specialGroups) {\r\n        this._specialGroups = specialGroups\r\n    }\r\n    setIngridientSearch(ingridientSearch) {\r\n        this._ingridientSearch = ingridientSearch\r\n    }\r\n    setDish(dishes) {\r\n        this._dishes = dishes\r\n    }\r\n    setMeaSure(measure_id) {\r\n        this._measure_id = measure_id\r\n    }\r\n    setIngridient(ingridient) {\r\n        this._ingridient = ingridient\r\n    }\r\n    setSelectedCategory(category) {\r\n        this.setPage(1)\r\n        this._selectedCategory = category\r\n    }\r\n    setSelectedSpecialGroup(specialGroup) {\r\n        this.setPage(1)\r\n        this._selectedSpecialGroup = specialGroup\r\n    }\r\n    setSelectedNationality(nationality) {\r\n        this.setPage(1)\r\n        this._selectedNationality = nationality\r\n    }\r\n    setSelectedIngridientSearch(ingridientSearch) {\r\n        this.setPage(1)\r\n        this._selectedIngridientSearch = ingridientSearch\r\n    }\r\n    setSelectedMeaSure(measure_id) {\r\n        this._selectedMeaSure = measure_id\r\n    }\r\n    setSelectedIngridient(ingridient) {\r\n        this._selectedIngridient = ingridient\r\n    }\r\n    setPage(page) {\r\n        this._page = page\r\n    }\r\n    setTotalCount(count) {\r\n        this._totalCount = count\r\n    }\r\n\r\n\r\n    get categories(){\r\n        return this._categories\r\n    }\r\n    get nationalities() {\r\n        return this._nationalities\r\n    }\r\n    get specialGroup() {\r\n        return this._specialGroups\r\n    }\r\n    get dishes() {\r\n        return this._dishes\r\n    }\r\n    get ingridientSearch() {\r\n        return this._ingridientSearch\r\n    }\r\n    get measure_id() {\r\n        return this._measure_id\r\n    }\r\n    get ingridients() {\r\n        return this._ingridient\r\n    }\r\n    get selectedCategory() {\r\n        return this._selectedCategory\r\n    }\r\n    get selectedNationality() {\r\n        return this._selectedNationality\r\n    }\r\n    get selectedSpecialGroup() {\r\n        return this._selectedSpecialGroup\r\n    }\r\n    get selectedIngridientSearch() {\r\n        return this._selectedIngridientSearch\r\n    }\r\n    get selectedMeaSure() {\r\n        return this._selectedMeaSure\r\n    }\r\n    get selectedIngridient() {\r\n        return this._selectedMeaSure\r\n    }\r\n    get totalCount() {\r\n        return this._totalCount\r\n    }\r\n    get page() {\r\n        return this._page\r\n    }\r\n    get limit() {\r\n        return this._limit\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}