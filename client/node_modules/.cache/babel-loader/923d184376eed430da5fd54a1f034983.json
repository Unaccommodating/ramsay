{"ast":null,"code":"var _jsxFileName = \"D:\\\\node-react\\\\ramsay\\\\client\\\\src\\\\components\\\\WebSock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WebSock = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [value, setValue] = useState('');\n  const socket = useRef(); // const [connected, setConnected] = useState(false);\n  // const [username, setUsername] = useState('')\n\n  function connect() {\n    socket.current = new WebSocket('ws://localhost:4000');\n\n    socket.current.onopen = () => {\n      // setConnected(true)\n      const message = {\n        event: 'connection',\n        // username,\n        id: Date.now()\n      };\n      socket.current.send(JSON.stringify(message));\n    };\n\n    socket.current.onmessage = event => {\n      const message = JSON.parse(event.data);\n      setMessages(prev => [message, ...prev]);\n    };\n\n    socket.current.onclose = () => {\n      console.log('Socket закрыт');\n    };\n\n    socket.current.onerror = () => {\n      console.log('Socket произошла ошибка');\n    };\n  }\n\n  connect();\n\n  const sendMessage = async () => {\n    const message = {\n      // username,\n      message: value,\n      id: Date.now(),\n      event: 'message'\n    };\n    socket.current.send(JSON.stringify(message));\n    setValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: e => setValue(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map(mess => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: mess.message\n      }, mess.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WebSock, \"TQvTEZTUfAE/XGLb/3AIDVt17yY=\");\n\n_c = WebSock;\nexport default WebSock;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSock\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","WebSock","messages","setMessages","value","setValue","socket","connect","current","WebSocket","onopen","message","event","id","Date","now","send","JSON","stringify","onmessage","parse","data","prev","onclose","console","log","onerror","sendMessage","e","target","map","mess"],"sources":["D:/node-react/ramsay/client/src/components/WebSock.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst WebSock = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [value, setValue] = useState('');\r\n    const socket = useRef()\r\n    // const [connected, setConnected] = useState(false);\r\n    // const [username, setUsername] = useState('')\r\n\r\n    function connect() {\r\n        socket.current = new WebSocket('ws://localhost:4000')\r\n\r\n        socket.current.onopen = () => {\r\n            // setConnected(true)\r\n            const message = {\r\n                event: 'connection',\r\n                // username,\r\n                id: Date.now()\r\n            }\r\n            socket.current.send(JSON.stringify(message))\r\n        }\r\n        socket.current.onmessage = (event) => {\r\n            const message = JSON.parse(event.data)\r\n            setMessages(prev => [message, ...prev])\r\n        }\r\n        socket.current.onclose = () => {\r\n            console.log('Socket закрыт')\r\n        }\r\n        socket.current.onerror = () => {\r\n            console.log('Socket произошла ошибка')\r\n        }\r\n    }\r\n\r\n    connect()\r\n\r\n    const sendMessage = async () => {\r\n        const message = {\r\n            // username,\r\n            message: value,\r\n            id: Date.now(),\r\n            event: 'message'\r\n        }\r\n        socket.current.send(JSON.stringify(message));\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"center\">\r\n            <div className=\"form\">\r\n                <input value={value} onChange={e => setValue(e.target.value)} type=\"text\"/>\r\n                <button onClick={sendMessage}>Отправить</button>\r\n            </div>\r\n            <div className=\"messages\">\r\n                {messages.map(mess =>\r\n                    <div key={mess.id} className=\"message\">\r\n                        {mess.message}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WebSock;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMO,MAAM,GAAGR,MAAM,EAArB,CAHkB,CAIlB;EACA;;EAEA,SAASS,OAAT,GAAmB;IACfD,MAAM,CAACE,OAAP,GAAiB,IAAIC,SAAJ,CAAc,qBAAd,CAAjB;;IAEAH,MAAM,CAACE,OAAP,CAAeE,MAAf,GAAwB,MAAM;MAC1B;MACA,MAAMC,OAAO,GAAG;QACZC,KAAK,EAAE,YADK;QAEZ;QACAC,EAAE,EAAEC,IAAI,CAACC,GAAL;MAHQ,CAAhB;MAKAT,MAAM,CAACE,OAAP,CAAeQ,IAAf,CAAoBC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAApB;IACH,CARD;;IASAL,MAAM,CAACE,OAAP,CAAeW,SAAf,GAA4BP,KAAD,IAAW;MAClC,MAAMD,OAAO,GAAGM,IAAI,CAACG,KAAL,CAAWR,KAAK,CAACS,IAAjB,CAAhB;MACAlB,WAAW,CAACmB,IAAI,IAAI,CAACX,OAAD,EAAU,GAAGW,IAAb,CAAT,CAAX;IACH,CAHD;;IAIAhB,MAAM,CAACE,OAAP,CAAee,OAAf,GAAyB,MAAM;MAC3BC,OAAO,CAACC,GAAR,CAAY,eAAZ;IACH,CAFD;;IAGAnB,MAAM,CAACE,OAAP,CAAekB,OAAf,GAAyB,MAAM;MAC3BF,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACH,CAFD;EAGH;;EAEDlB,OAAO;;EAEP,MAAMoB,WAAW,GAAG,YAAY;IAC5B,MAAMhB,OAAO,GAAG;MACZ;MACAA,OAAO,EAAEP,KAFG;MAGZS,EAAE,EAAEC,IAAI,CAACC,GAAL,EAHQ;MAIZH,KAAK,EAAE;IAJK,CAAhB;IAMAN,MAAM,CAACE,OAAP,CAAeQ,IAAf,CAAoBC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAApB;IACAN,QAAQ,CAAC,EAAD,CAAR;EACH,CATD;;EAWA,oBACI;IAAK,SAAS,EAAC,QAAf;IAAA,wBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAO,KAAK,EAAED,KAAd;QAAqB,QAAQ,EAAEwB,CAAC,IAAIvB,QAAQ,CAACuB,CAAC,CAACC,MAAF,CAASzB,KAAV,CAA5C;QAA8D,IAAI,EAAC;MAAnE;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,OAAO,EAAEuB,WAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,UAAf;MAAA,UACKzB,QAAQ,CAAC4B,GAAT,CAAaC,IAAI,iBACd;QAAmB,SAAS,EAAC,SAA7B;QAAA,UACKA,IAAI,CAACpB;MADV,GAAUoB,IAAI,CAAClB,EAAf;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CA3DD;;GAAMZ,O;;KAAAA,O;AA6DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}