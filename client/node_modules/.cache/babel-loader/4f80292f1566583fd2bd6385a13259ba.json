{"ast":null,"code":"var _jsxFileName = \"D:\\\\node-react\\\\ramsay\\\\client\\\\src\\\\components\\\\WebSock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport moduleStyle from \"../modules/Comment.module.css\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { fetchName } from \"../http/userAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WebSock = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [value, setValue] = useState('');\n  const socket = useRef();\n  const [connected, setConnected] = useState(true);\n  const [username, setUsername] = useState('');\n  const userId = localStorage.getItem('userId');\n  useEffect(() => {\n    fetchName(userId).then(data => setUsername(data));\n  }, []); // function connect() {\n  //     socket.current = new WebSocket('ws://localhost:4000')\n  //\n  //     socket.current.onopen = () => {\n  //         setConnected(true)\n  //         const message = {\n  //             event: 'connection',\n  //             username,\n  //             id: Date.now()\n  //         }\n  //         socket.current.send(JSON.stringify(message))\n  //     }\n  //     socket.current.onmessage = (event) => {\n  //         const message = JSON.parse(event.data)\n  //         setMessages(prev => [message, ...prev])\n  //     }\n  //     socket.current.onclose= () => {\n  //         console.log('Socket закрыт')\n  //     }\n  //     socket.current.onerror = () => {\n  //         console.log('Socket произошла ошибка')\n  //     }\n  // }\n  //\n  // const sendMessage = async () => {\n  //     const message = {\n  //         username,\n  //         message: value,\n  //         id: Date.now(),\n  //         event: 'message'\n  //     }\n  //     socket.current.send(JSON.stringify(message));\n  //     setValue('')\n  // }\n  //\n  //\n\n  if (!connected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          type: \"text\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: moduleStyle.form,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), username, \", \\u043E\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043E\\u0442\\u0437\\u044B\\u0432!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WebSock, \"+xC3xFRibTuSycPR9FX/9hQnQ44=\");\n\n_c = WebSock;\nexport default WebSock;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSock\");","map":{"version":3,"names":["React","useEffect","useRef","useState","moduleStyle","Button","Form","fetchName","WebSock","messages","setMessages","value","setValue","socket","connected","setConnected","username","setUsername","userId","localStorage","getItem","then","data","e","target","connect","form"],"sources":["D:/node-react/ramsay/client/src/components/WebSock.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport moduleStyle from \"../modules/Comment.module.css\"\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {fetchName} from \"../http/userAPI\";\r\n\r\n\r\nconst WebSock = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [value, setValue] = useState('');\r\n    const socket = useRef()\r\n    const [connected, setConnected] = useState(true);\r\n    const [username, setUsername] = useState('')\r\n    const userId = localStorage.getItem('userId')\r\n\r\n    useEffect(() => {\r\n        fetchName(userId).then(data => setUsername(data))\r\n    }, [])\r\n\r\n    // function connect() {\r\n    //     socket.current = new WebSocket('ws://localhost:4000')\r\n    //\r\n    //     socket.current.onopen = () => {\r\n    //         setConnected(true)\r\n    //         const message = {\r\n    //             event: 'connection',\r\n    //             username,\r\n    //             id: Date.now()\r\n    //         }\r\n    //         socket.current.send(JSON.stringify(message))\r\n    //     }\r\n    //     socket.current.onmessage = (event) => {\r\n    //         const message = JSON.parse(event.data)\r\n    //         setMessages(prev => [message, ...prev])\r\n    //     }\r\n    //     socket.current.onclose= () => {\r\n    //         console.log('Socket закрыт')\r\n    //     }\r\n    //     socket.current.onerror = () => {\r\n    //         console.log('Socket произошла ошибка')\r\n    //     }\r\n    // }\r\n    //\r\n    // const sendMessage = async () => {\r\n    //     const message = {\r\n    //         username,\r\n    //         message: value,\r\n    //         id: Date.now(),\r\n    //         event: 'message'\r\n    //     }\r\n    //     socket.current.send(JSON.stringify(message));\r\n    //     setValue('')\r\n    // }\r\n    //\r\n    //\r\n    if (!connected) {\r\n        return (\r\n            <div className=\"center\">\r\n                <div className=\"form\">\r\n                    <input\r\n                        value={username}\r\n                        onChange={e => setUsername(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Введите ваше имя\"/>\r\n                    <button onClick={connect}>Войти</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={moduleStyle.form}>\r\n            <h2>Комментарии</h2>\r\n            {username}, оставьте отзыв!\r\n            {/*<div>*/}\r\n            {/*    <Form>*/}\r\n            {/*        <Form.Control as=\"textarea\" className={moduleStyle.textarea} value={value} onChange={e => setValue(e.target.value)} type=\"text\"/>*/}\r\n            {/*        <Button className=\"mt-3\" onClick={sendMessage}>Отправить</Button>*/}\r\n            {/*    </Form>*/}\r\n            {/*    <div className=\"messages\">*/}\r\n            {/*        {messages.map(mess =>*/}\r\n            {/*            <div className={moduleStyle.message} key={mess.id}>*/}\r\n            {/*                {mess.event === 'connection'*/}\r\n            {/*                    ? <div className=\"connection_message\">*/}\r\n            {/*                        Пользователь {mess.username} подключился*/}\r\n            {/*                    </div>*/}\r\n            {/*                    : <div>*/}\r\n            {/*                        {mess.username}: {mess.message}*/}\r\n            {/*                    </div>*/}\r\n            {/*                }*/}\r\n            {/*            </div>*/}\r\n            {/*        )}*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WebSock;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,iBAA3B;AACA,SAAQC,SAAR,QAAwB,iBAAxB;;;AAGA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMU,MAAM,GAAGX,MAAM,EAArB;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMe,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;EAEAnB,SAAS,CAAC,MAAM;IACZM,SAAS,CAACW,MAAD,CAAT,CAAkBG,IAAlB,CAAuBC,IAAI,IAAIL,WAAW,CAACK,IAAD,CAA1C;EACH,CAFQ,EAEN,EAFM,CAAT,CARkB,CAYlB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,IAAI,CAACR,SAAL,EAAgB;IACZ,oBACI;MAAK,SAAS,EAAC,QAAf;MAAA,uBACI;QAAK,SAAS,EAAC,MAAf;QAAA,wBACI;UACI,KAAK,EAAEE,QADX;UAEI,QAAQ,EAAEO,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACC,MAAF,CAASb,KAAV,CAF9B;UAGI,IAAI,EAAC,MAHT;UAII,WAAW,EAAC;QAJhB;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI;UAAQ,OAAO,EAAEc,OAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAYH;;EAGD,oBACI;IAAK,SAAS,EAAErB,WAAW,CAACsB,IAA5B;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKV,QAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA0BH,CA1FD;;GAAMR,O;;KAAAA,O;AA4FN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}