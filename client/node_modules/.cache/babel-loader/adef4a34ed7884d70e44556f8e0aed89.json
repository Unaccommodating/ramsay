{"ast":null,"code":"var _jsxFileName = \"D:\\\\node-react\\\\ramsay\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Context } from \"./index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  console.log(localStorage.getItem('userId'));\n  useEffect(() => {\n    check().then(data => {\n      user.setUser(true);\n      user.setIsAuth(true);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}, \"eoNEOO0XgZmELjwcufg9rFYsGdc=\")), \"eoNEOO0XgZmELjwcufg9rFYsGdc=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["BrowserRouter","React","useContext","useEffect","useState","AppRouter","NavBar","observer","check","Spinner","Context","App","user","loading","setLoading","console","log","localStorage","getItem","then","data","setUser","setIsAuth","finally"],"sources":["D:/node-react/ramsay/client/src/App.js"],"sourcesContent":["import {BrowserRouter} from \"react-router-dom\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\nimport {Context} from \"./index\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n    console.log(localStorage.getItem('userId'))\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"border\"}/>\n    }\n\n  return (\n    <BrowserRouter>\n        <NavBar/>\n        <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n"],"mappings":";;;AAAA,SAAQA,aAAR,QAA4B,kBAA5B;AACA,OAAOC,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,OAAR,QAAsB,SAAtB;;;AAEA,MAAMC,GAAG,MAAGJ,QAAQ,SAAC,MAAM;EAAA;;EACvB,MAAM;IAACK;EAAD,IAASV,UAAU,CAACQ,OAAD,CAAzB;EACA,MAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;EACAW,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ;EAEAf,SAAS,CAAC,MAAM;IACZK,KAAK,GAAGW,IAAR,CAAaC,IAAI,IAAI;MACjBR,IAAI,CAACS,OAAL,CAAa,IAAb;MACAT,IAAI,CAACU,SAAL,CAAe,IAAf;IACH,CAHD,EAGGC,OAHH,CAGW,MAAMT,UAAU,CAAC,KAAD,CAH3B;EAIH,CALQ,EAKN,EALM,CAAT;;EAOA,IAAID,OAAJ,EAAa;IACT,oBAAO,QAAC,OAAD;MAAS,SAAS,EAAE;IAApB;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAEH,oBACE,QAAC,aAAD;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAtBmB,kCAAX,iCAAT;;MAAMF,G;AAwBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}